/**
 * 1、对于昨天的 对象 属性的 特性的补充
 *      对于 set和 get 方法，在不设置的情况下是已经 内置有对应的方法，
 *      如果 显示调用了 这两个方法，相当于就是 重写的这两个方法，导致默认的 obj.a = 1 (set) 或者 obj.a (get)都不会有效果，因为 被重写了
 * 2、对于正则表达式的问题
 *      I、对于 ?: 在分组里的用法，就是指 不捕获分组，但是要输出（就是在 分组显示中没有）
 *          var m = "abcabc".match(/(?:a)(b)(c)/)
            //结果 ["abc", "b", "c"]
            // m[0] 是/(?:a)(b)(c)/匹配到的整个字符串，这里包括了a
            // m[1] 是捕获组1，即(b)匹配的子字符串substring or sub sequence
            // m[2] 是捕获组2，即(c)匹配到的
        II、同时 引出了 一个 字符的 匹配方法的不同 match 方法
            在正则中 是否有 g（搜索所有满足条件的方法）输出的 值 完全不同
            1）没有 g ，最后输出第一个 满足条件 字符串，index（匹配的起始位置），input（匹配字符串的引用） 组成的数组
                 var m = "abcabc".match(/(?:a)(b)(c)/)
                 //m的结果 ["abc", "b", "c"]
            2）有 g，返回 所有 满足条件 的 匹配字符串 组成的数组
                 var m = "abcabc".match(/(?:a)(b)(c)/g)
                 //m的结果(2) ["abc", "abc"]
            3）区分 exec、test、match三种是哪个对象的方法
                reg.exec       string.match
                reg.test
 */