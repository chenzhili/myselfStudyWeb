/**
 * Created by YK on 2018/1/16.
 */
/**
 * 1、数字的补缺
 *  I、数字中不区分整数值和浮点数值，都是用“IEEE 754 标准定义的双精度64位格式”的浮点数 表示
 *      0.1+0.2 //0.30000000000000004
 *      0.1*0.2 //0.020000000000000004
 *  II、对于 全局内置 函数 parseInt 和 parseFloat 的用法（以及 Number()）
 *       parseInt 和 Number 都不会一直按照十进制计算，会根据传入值得特征来定；
 *       两个函数 Number(params); parseInt(params,几进制);（但是这个几进制，优先级低于 传入的参数对应的特征 比如：parseInt(011,10)，按照8进制来计算）；
 *       例子：
 *          parseInt("012"); //12
 parseInt(012); //10
 parseInt("012",8); //10
 如果是数值：0开头为八进制 ，0x开头为16进制，否则为10进制，书写规范的情况下
 如果为字符串：parseInt("0x12");//18 parseInt("012",8);//10

 parseFloat 只应用于 解析 十进制数字 （针对于 传入的值 为 浮点数，为整数还是可以解析 8 进制）
 III、把一个 字符串 数字 转换成 数字格式的方法 ,用 +，但是如果字符串中有解析不了的，就返回NaN
 +"343" //343
 +"32e"  //NaN
 *
 *
 */